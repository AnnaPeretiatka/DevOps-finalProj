apiVersion: apps/v1
kind: Deployment
metadata: { 
  name: statuspage-worker, 
  namespace: statuspage
}
spec:
  replicas: {{ .Values.replicaCounts.worker }}
  selector: {
    matchLabels: {
      app: statuspage,
      tier: worker
    }
  }
  template:
    metadata: {
      labels: { 
        app: statuspage,
        tier: worker
      }
    }
    spec:
      containers:
        - name: worker
          image: "{{ required "image.repository is required" .Values.image.repository }}:{{ .Values.image.tag }}"
          #command: ["celery"]
          #args: ["-A","statuspage","worker","-l","info","--pool=solo"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python","statuspage/manage.py","rqworker","high","default","low"]
          envFrom: [{ secretRef: { name: statuspage-secrets }}, { configMapRef: { name: statuspage-config }}]
          startupProbe:
            exec:
              command: ["/bin/sh","-c","getent hosts redis || nslookup redis || ping -c1 redis"]
            failureThreshold: 30
            periodSeconds: 5
          resources: {{- toYaml .Values.resources.worker | nindent 12 }}
