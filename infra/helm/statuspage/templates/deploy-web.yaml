apiVersion: apps/v1
kind: Deployment
metadata: { name: statuspage-web, namespace: statuspage }
spec:
  replicas: {{ .Values.replicaCounts.web }}
  strategy: { type: RollingUpdate, rollingUpdate: { maxUnavailable: 0, maxSurge: 1 } }
  selector: { matchLabels: { app: statuspage, tier: web } }
  template:
    metadata: { labels: { app: statuspage, tier: web } }
    spec:
      containers:
        - name: web
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["gunicorn"]
          args: ["statuspage.wsgi:application","-b","0.0.0.0:8000","-w","3","--threads","3","--timeout","60"]
          ports: [{ containerPort: 8000 }]
          envFrom: [{ secretRef: { name: statuspage-secrets }}, { configMapRef: { name: statuspage-config }}]
          readinessProbe: { httpGet: { path: "/", port: 8000 }, initialDelaySeconds: 5, periodSeconds: 10 }
          livenessProbe:  { httpGet: { path: "/", port: 8000 }, initialDelaySeconds: 20, periodSeconds: 20 }
          resources: {{- toYaml .Values.resources.web | nindent 12 }}
